plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.sixsense'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
//    configureEach {
//        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
//    }
}

repositories {
    mavenCentral()
}

dependencies {
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.10'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'
    annotationProcessor "com.querydsl:querydsl-apt"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5',
            // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
            //'org.bouncycastle:bcprov-jdk15on:1.70',
            'io.jsonwebtoken:jjwt-jackson:0.11.5' // or 'io.jsonwebtoken:jjwt-gson:0.11.5' for gson

    //jwt
    implementation('com.auth0:java-jwt:4.2.1')

    //springboot
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //h2 db for test
    runtimeOnly 'com.h2database:h2'

    //mysql db
    runtimeOnly 'com.mysql:mysql-connector-j'

    //mongo db
//    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//    implementation 'org.mongodb:mongodb-driver-sync'

    //swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //openvidu
    implementation 'io.openvidu:openvidu-java-client:2.25.0'


    //log4j2
//    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
//    implementation 'org.apache.logging.log4j:log4j-mongodb4'

    //slf4j
//    implementation 'org.slf4j:slf4j-api'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = 'src/main/generated'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
